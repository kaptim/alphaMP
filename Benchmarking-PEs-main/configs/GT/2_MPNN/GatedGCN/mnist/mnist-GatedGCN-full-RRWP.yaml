out_dir: results
metric_best: accuracy
tensorboard_each_run: True  # Log to Tensorboard each run
accelerator: "cuda:0"
num_workers: 2
pad_to_full_graph: True
mlflow:
  use: False
  project: Exp
  name: mnist-GatedGCN-full-RRWP
wandb:
  use: True
  project: "PEGT"
  name: "MNIST-GatedGCN-full-RRWP"
  entity: jiaqing
dataset:
  pe_transform_on_the_fly: True # compute PE on the fly to save memory when launching many experiments in parallel
  format: PyG-GNNBenchmarkDataset
  name: MNIST
  task: graph
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: LinearNode
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: LinearEdge
  edge_encoder_bn: False
posenc_RRWP:
  enable: True
  ksteps: 8
  add_identity: True
  add_node_attr: False
  add_inverse: False
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: custom_gnn
  loss_fun: cross_entropy
  edge_decoding: dot
  graph_pooling: mean
gnn:
  head: default
  layers_pre_mp: 0
  layers_mp: 4
  layers_post_mp: 3
  dim_inner: 52  # `gt.dim_hidden` must match `gnn.dim_inner`
  layer_type: gatedgcnconv
  batchnorm: False
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.001
  max_epoch: 100
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5