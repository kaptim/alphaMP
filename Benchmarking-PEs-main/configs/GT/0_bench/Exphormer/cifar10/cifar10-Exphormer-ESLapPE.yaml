out_dir: results
metric_best: accuracy
tensorboard_each_run: True  # Log to Tensorboard each run
accelerator: "cuda:0"
repeat: 4
num_workers: 4
mlflow:
  use: False
  project: Exp
  name: CIFAR10-Exphormer-ESLapPE
wandb:
  use: True
  project: "PEGT"
  name: "CIFAR10-Exphormer-ESLapPE"
  entity: jiaqing
dataset:
  pe_transform_on_the_fly: False # compute PE on the fly to save memory when launching many experiments in parallel
  format: PyG-GNNBenchmarkDataset
  name: CIFAR10
  task: graph
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: LinearNode+EquivStableLapPE
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: LinearEdge
  edge_encoder_bn: False
posenc_EquivStableLapPE:
  enable: True
  eigen:
    laplacian_norm: none
    eigvec_norm: L2
    max_freqs: 8
  raw_norm_type: none
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: MultiModel
  loss_fun: cross_entropy
  edge_decoding: dot
  graph_pooling: mean
gt:
  layer_type: CustomGatedGCN+Exphormer
  layers: 5
  n_heads: 4
  dim_hidden: 40  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.1
  layer_norm: False
  batch_norm: True
#  bn_momentum: 0.01
  update_e: True
  attn_dropout: 0.1
  attn:
    clamp: 5.
    act: 'relu'
    full_attn: True
    edge_enhance: True
    O_e: True
    norm_e: True
    fwl: False
prep:
  add_edge_index: True
  num_virt_node: 0
  use_exp_edges: False
  exp: True
  exp_deg: 5
gnn:
  head: default
  layers_pre_mp: 0
  layers_post_mp: 2
  dim_inner: 40  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: False
  act: relu
  dropout: 0.1
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.001
  max_epoch: 150
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5
