out_dir: results
metric_best: accuracy-SBM
tensorboard_each_run: True  # Log to Tensorboard each run
accelerator: "cuda:0"
num_workers: 4
wandb:
  use: True
  project: "PEGT"
  name: "PATTERN-GRITSparse-GCKN"
  entity: jiaqing
dataset:
  format: PyG-GNNBenchmarkDataset
  name: PATTERN
  task: graph
  task_type: classification
  transductive: False
  split_mode: standard
  node_encoder: True
  node_encoder_name: LinearNode+GCKN
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: DummyEdge
  edge_encoder_bn: False
posenc_GCKN:
  enable: True
  normalization: None
  beta: 1 # 0.5 for method "pRWSE"
  method: "diffusion"
  use_edge_attr: False
  eigen:
    laplacian_norm: none
    eigvec_norm: L2
    max_freqs: 8
  model: DeepSet
  dim_pe: 22
  layers: 4
  n_heads: 4  # Only used when `posenc.model: Transformer`
  raw_norm_type: none
train:
  mode: custom
  batch_size: 32
  eval_period: 1
  ckpt_period: 100
model:
  type: GritTransformer
  loss_fun: weighted_cross_entropy
  edge_decoding: dot
gt:  # Hyperparameters optimized for up to ~500k budget.
  layer_type: GritTransformer
  layers: 10
  n_heads: 8
  dim_hidden: 64 # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.0
  attn_dropout: 0.2
  layer_norm: False
  batch_norm: True
  sparse: True
  update_e: True
  attn:
    clamp: 5.
    act: 'relu'
    full_attn: True
    edge_enhance: True
    O_e: True
    norm_e: True
    fwl: False
gnn:
  dim_edge: 64
  head: inductive_node
  layers_pre_mp: 0
  layers_post_mp: 3
  dim_inner: 64  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.0005
  max_epoch: 100
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5
